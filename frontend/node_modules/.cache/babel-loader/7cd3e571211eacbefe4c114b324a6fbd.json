{"ast":null,"code":"import axios, { AxiosError } from 'axios';\nconst base = axios.create({\n  baseURL: 'http://localhost:9000/picture',\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst pictureApi = {\n  getPictures: async () => {\n    try {\n      const response = await base.get('get');\n      return response.data;\n    } catch (err) {\n      if (err instanceof AxiosError) {\n        var _err$response;\n        console.log(err);\n        //@ts-ignore\n        throw new Error((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data.msg);\n      } else {\n        throw new Error('Something went wrong');\n      }\n    }\n  },\n  setPicture: async id => {\n    try {\n      const response = await base.post('setpictureforuser', {\n        id\n      });\n      return response.data;\n    } catch (err) {\n      if (err instanceof AxiosError) {\n        var _err$response2;\n        console.log(err);\n        //@ts-ignore\n        throw new Error((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data.msg);\n      } else {\n        throw new Error('Something went wrong');\n      }\n    }\n  }\n};\nexport default pictureApi;","map":{"version":3,"names":["axios","AxiosError","base","create","baseURL","timeout","headers","pictureApi","getPictures","response","get","data","err","console","log","Error","msg","setPicture","id","post"],"sources":["/home/f/Documents/re_btf/frontend/src/api/pictures.tsx"],"sourcesContent":["import axios, { Axios, AxiosError } from 'axios'\n\nconst base = axios.create({\n    baseURL: 'http://localhost:9000/picture',\n    timeout: 5000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n})\n\nconst pictureApi = {\n    getPictures: async () => {\n        try {\n            const response = await base.get('get')\n            return response.data\n        } catch (err) {\n            if (err instanceof AxiosError) {\n                console.log(err)\n                //@ts-ignore\n                throw new Error(err.response?.data.msg)\n            } else {\n                throw new Error('Something went wrong')\n            }\n        }\n    },\n    setPicture: async (id: string) => {\n        try {\n            const response = await base.post('setpictureforuser', { id })\n            return response.data\n        } catch (err) {\n            if (err instanceof AxiosError) {\n                console.log(err)\n                //@ts-ignore\n                throw new Error(err.response?.data.msg)\n            } else {\n                throw new Error('Something went wrong')\n            }\n        }\n    },\n}\n\nexport default pictureApi\n"],"mappings":"AAAA,OAAOA,KAAK,IAAWC,UAAU,QAAQ,OAAO;AAEhD,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACtBC,OAAO,EAAE,+BAA+B;EACxCC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAG;EACfC,WAAW,EAAE,YAAY;IACrB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACQ,GAAG,CAAC,KAAK,CAAC;MACtC,OAAOD,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV,IAAIA,GAAG,YAAYX,UAAU,EAAE;QAAA;QAC3BY,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB;QACA,MAAM,IAAIG,KAAK,kBAACH,GAAG,CAACH,QAAQ,kDAAZ,cAAcE,IAAI,CAACK,GAAG,CAAC;MAC3C,CAAC,MAAM;QACH,MAAM,IAAID,KAAK,CAAC,sBAAsB,CAAC;MAC3C;IACJ;EACJ,CAAC;EACDE,UAAU,EAAE,MAAOC,EAAU,IAAK;IAC9B,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMP,IAAI,CAACiB,IAAI,CAAC,mBAAmB,EAAE;QAAED;MAAG,CAAC,CAAC;MAC7D,OAAOT,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV,IAAIA,GAAG,YAAYX,UAAU,EAAE;QAAA;QAC3BY,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB;QACA,MAAM,IAAIG,KAAK,mBAACH,GAAG,CAACH,QAAQ,mDAAZ,eAAcE,IAAI,CAACK,GAAG,CAAC;MAC3C,CAAC,MAAM;QACH,MAAM,IAAID,KAAK,CAAC,sBAAsB,CAAC;MAC3C;IACJ;EACJ;AACJ,CAAC;AAED,eAAeR,UAAU"},"metadata":{},"sourceType":"module"}